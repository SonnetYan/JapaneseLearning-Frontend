{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"kana-controls\"\n};\nconst _hoisted_2 = {\n  class: \"kana-filter\"\n};\nconst _hoisted_3 = {\n  class: \"row-filter\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"kana-rows-container\"\n};\nconst _hoisted_6 = {\n  class: \"row-title\"\n};\nconst _hoisted_7 = {\n  class: \"kana-cards\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  class: \"card-inner\"\n};\nconst _hoisted_10 = {\n  class: \"card-front\"\n};\nconst _hoisted_11 = {\n  class: \"kana-character\"\n};\nconst _hoisted_12 = {\n  class: \"card-back\"\n};\nconst _hoisted_13 = {\n  class: \"romaji\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.setKanaType('hiragana')),\n    class: _normalizeClass({\n      active: $data.kanaType === 'hiragana'\n    })\n  }, \" 平假名 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.setKanaType('katakana')),\n    class: _normalizeClass({\n      active: $data.kanaType === 'katakana'\n    })\n  }, \" 片假名 \", 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rows, row => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: row.id,\n      onClick: $event => $options.toggleRow(row.id),\n      class: _normalizeClass({\n        active: $data.selectedRows.includes(row.id)\n      })\n    }, _toDisplayString(row.name), 11 /* TEXT, CLASS, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.selectAllRows && $options.selectAllRows(...args)),\n    class: _normalizeClass({\n      active: $data.selectedRows.length === $data.rows.length\n    })\n  }, \" 全部 \", 2 /* CLASS */)])]), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 循环遍历每一行 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rows, row => {\n    return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n      key: row.id,\n      class: \"kana-row\"\n    }, [_createElementVNode(\"h3\", _hoisted_6, _toDisplayString(row.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" 该行的所有卡片 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getRowKana(row.id), (card, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass([\"kana-card\", {\n          flipped: $data.flippedCards[card.character]\n        }]),\n        onClick: $event => $options.flipCard(card.character)\n      }, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, _toDisplayString(card.character), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString(card.romaji), 1 /* TEXT */)])])], 10 /* CLASS, PROPS */, _hoisted_8);\n    }), 128 /* KEYED_FRAGMENT */))])])), [[_vShow, $data.selectedRows.includes(row.id)]]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","onClick","_cache","$event","$options","setKanaType","_normalizeClass","active","$data","kanaType","_hoisted_3","_renderList","rows","row","key","id","toggleRow","selectedRows","includes","name","_hoisted_4","args","selectAllRows","length","_hoisted_5","_createCommentVNode","_hoisted_6","_toDisplayString","_hoisted_7","getRowKana","card","index","flipped","flippedCards","character","flipCard","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","romaji","_hoisted_8"],"sources":["/Users/sonnet/Documents/4370 Web Programming/ai programming/japanese-learning-app/frontend/src/components/KanaCard.vue"],"sourcesContent":["<!-- 平假名和片假名学习卡片 -->\n<template>\n  <div class=\"kana-controls\">\n    <div class=\"kana-filter\">\n      <button \n        @click=\"setKanaType('hiragana')\" \n        :class=\"{ active: kanaType === 'hiragana' }\"\n      >\n        平假名\n      </button>\n      <button \n        @click=\"setKanaType('katakana')\" \n        :class=\"{ active: kanaType === 'katakana' }\"\n      >\n        片假名\n      </button>\n    </div>\n    <div class=\"row-filter\">\n      <button \n        v-for=\"row in rows\" \n        :key=\"row.id\" \n        @click=\"toggleRow(row.id)\"\n        :class=\"{ active: selectedRows.includes(row.id) }\"\n      >\n        {{ row.name }}\n      </button>\n      <button @click=\"selectAllRows\" :class=\"{ active: selectedRows.length === rows.length }\">\n        全部\n      </button>\n    </div>\n  </div>\n\n  <div class=\"kana-rows-container\">\n    <!-- 循环遍历每一行 -->\n    <div v-for=\"row in rows\" :key=\"row.id\" class=\"kana-row\" v-show=\"selectedRows.includes(row.id)\">\n      <h3 class=\"row-title\">{{ row.name }}</h3>\n      <div class=\"kana-cards\">\n        <!-- 该行的所有卡片 -->\n        <div \n          v-for=\"(card, index) in getRowKana(row.id)\" \n          :key=\"index\" \n          class=\"kana-card\" \n          :class=\"{ flipped: flippedCards[card.character] }\"\n          @click=\"flipCard(card.character)\"\n        >\n          <div class=\"card-inner\">\n            <div class=\"card-front\">\n              <div class=\"kana-character\">{{ card.character }}</div>\n            </div>\n            <div class=\"card-back\">\n              <div class=\"romaji\">{{ card.romaji }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reactive } from 'vue';\n\nexport default {\n  name: 'KanaCard',\n  data() {\n    return {\n      kanaType: 'hiragana',\n      flippedCards: reactive({}),\n      selectedRows: ['a', 'k', 's', 't', 'n', 'h', 'm', 'y', 'r', 'w', 'n'],\n      rows: [\n        { id: 'a', name: 'あ行' },\n        { id: 'k', name: 'か行' },\n        { id: 's', name: 'さ行' },\n        { id: 't', name: 'た行' },\n        { id: 'n', name: 'な行' },\n        { id: 'h', name: 'は行' },\n        { id: 'm', name: 'ま行' },\n        { id: 'y', name: 'や行' },\n        { id: 'r', name: 'ら行' },\n        { id: 'w', name: 'わ行' },\n        { id: 'n', name: 'ん' }\n      ],\n      hiragana: [\n        // あ行\n        { character: 'あ', romaji: 'a', row: 'a' },\n        { character: 'い', romaji: 'i', row: 'a' },\n        { character: 'う', romaji: 'u', row: 'a' },\n        { character: 'え', romaji: 'e', row: 'a' },\n        { character: 'お', romaji: 'o', row: 'a' },\n        // か行\n        { character: 'か', romaji: 'ka', row: 'k' },\n        { character: 'き', romaji: 'ki', row: 'k' },\n        { character: 'く', romaji: 'ku', row: 'k' },\n        { character: 'け', romaji: 'ke', row: 'k' },\n        { character: 'こ', romaji: 'ko', row: 'k' },\n        // さ行\n        { character: 'さ', romaji: 'sa', row: 's' },\n        { character: 'し', romaji: 'shi', row: 's' },\n        { character: 'す', romaji: 'su', row: 's' },\n        { character: 'せ', romaji: 'se', row: 's' },\n        { character: 'そ', romaji: 'so', row: 's' },\n        // た行\n        { character: 'た', romaji: 'ta', row: 't' },\n        { character: 'ち', romaji: 'chi', row: 't' },\n        { character: 'つ', romaji: 'tsu', row: 't' },\n        { character: 'て', romaji: 'te', row: 't' },\n        { character: 'と', romaji: 'to', row: 't' },\n        // な行\n        { character: 'な', romaji: 'na', row: 'n' },\n        { character: 'に', romaji: 'ni', row: 'n' },\n        { character: 'ぬ', romaji: 'nu', row: 'n' },\n        { character: 'ね', romaji: 'ne', row: 'n' },\n        { character: 'の', romaji: 'no', row: 'n' },\n        // は行\n        { character: 'は', romaji: 'ha', row: 'h' },\n        { character: 'ひ', romaji: 'hi', row: 'h' },\n        { character: 'ふ', romaji: 'fu', row: 'h' },\n        { character: 'へ', romaji: 'he', row: 'h' },\n        { character: 'ほ', romaji: 'ho', row: 'h' },\n        // ま行\n        { character: 'ま', romaji: 'ma', row: 'm' },\n        { character: 'み', romaji: 'mi', row: 'm' },\n        { character: 'む', romaji: 'mu', row: 'm' },\n        { character: 'め', romaji: 'me', row: 'm' },\n        { character: 'も', romaji: 'mo', row: 'm' },\n        // や行\n        { character: 'や', romaji: 'ya', row: 'y' },\n        { character: 'ゆ', romaji: 'yu', row: 'y' },\n        { character: 'よ', romaji: 'yo', row: 'y' },\n        // ら行\n        { character: 'ら', romaji: 'ra', row: 'r' },\n        { character: 'り', romaji: 'ri', row: 'r' },\n        { character: 'る', romaji: 'ru', row: 'r' },\n        { character: 'れ', romaji: 're', row: 'r' },\n        { character: 'ろ', romaji: 'ro', row: 'r' },\n        // わ行\n        { character: 'わ', romaji: 'wa', row: 'w' },\n        { character: 'を', romaji: 'wo', row: 'w' },\n        // ん\n        { character: 'ん', romaji: 'n', row: 'n' }\n      ],\n      katakana: [\n        // ア行\n        { character: 'ア', romaji: 'a', row: 'a' },\n        { character: 'イ', romaji: 'i', row: 'a' },\n        { character: 'ウ', romaji: 'u', row: 'a' },\n        { character: 'エ', romaji: 'e', row: 'a' },\n        { character: 'オ', romaji: 'o', row: 'a' },\n        // カ行\n        { character: 'カ', romaji: 'ka', row: 'k' },\n        { character: 'キ', romaji: 'ki', row: 'k' },\n        { character: 'ク', romaji: 'ku', row: 'k' },\n        { character: 'ケ', romaji: 'ke', row: 'k' },\n        { character: 'コ', romaji: 'ko', row: 'k' },\n        // サ行\n        { character: 'サ', romaji: 'sa', row: 's' },\n        { character: 'シ', romaji: 'shi', row: 's' },\n        { character: 'ス', romaji: 'su', row: 's' },\n        { character: 'セ', romaji: 'se', row: 's' },\n        { character: 'ソ', romaji: 'so', row: 's' },\n        // タ行\n        { character: 'タ', romaji: 'ta', row: 't' },\n        { character: 'チ', romaji: 'chi', row: 't' },\n        { character: 'ツ', romaji: 'tsu', row: 't' },\n        { character: 'テ', romaji: 'te', row: 't' },\n        { character: 'ト', romaji: 'to', row: 't' },\n        // ナ行\n        { character: 'ナ', romaji: 'na', row: 'n' },\n        { character: 'ニ', romaji: 'ni', row: 'n' },\n        { character: 'ヌ', romaji: 'nu', row: 'n' },\n        { character: 'ネ', romaji: 'ne', row: 'n' },\n        { character: 'ノ', romaji: 'no', row: 'n' },\n        // ハ行\n        { character: 'ハ', romaji: 'ha', row: 'h' },\n        { character: 'ヒ', romaji: 'hi', row: 'h' },\n        { character: 'フ', romaji: 'fu', row: 'h' },\n        { character: 'ヘ', romaji: 'he', row: 'h' },\n        { character: 'ホ', romaji: 'ho', row: 'h' },\n        // マ行\n        { character: 'マ', romaji: 'ma', row: 'm' },\n        { character: 'ミ', romaji: 'mi', row: 'm' },\n        { character: 'ム', romaji: 'mu', row: 'm' },\n        { character: 'メ', romaji: 'me', row: 'm' },\n        { character: 'モ', romaji: 'mo', row: 'm' },\n        // ヤ行\n        { character: 'ヤ', romaji: 'ya', row: 'y' },\n        { character: 'ユ', romaji: 'yu', row: 'y' },\n        { character: 'ヨ', romaji: 'yo', row: 'y' },\n        // ラ行\n        { character: 'ラ', romaji: 'ra', row: 'r' },\n        { character: 'リ', romaji: 'ri', row: 'r' },\n        { character: 'ル', romaji: 'ru', row: 'r' },\n        { character: 'レ', romaji: 're', row: 'r' },\n        { character: 'ロ', romaji: 'ro', row: 'r' },\n        // ワ行\n        { character: 'ワ', romaji: 'wa', row: 'w' },\n        { character: 'ヲ', romaji: 'wo', row: 'w' },\n        // ン\n        { character: 'ン', romaji: 'n', row: 'n' }\n      ]\n    };\n  },\n  methods: {\n    getRowKana(rowId) {\n      const kanaSet = this.kanaType === 'hiragana' ? this.hiragana : this.katakana;\n      return kanaSet.filter(kana => kana.row === rowId);\n    },\n    flipCard(character) {\n      this.flippedCards[character] = !this.flippedCards[character];\n      \n      // 自动翻回卡片（1.5秒后）\n      setTimeout(() => {\n        this.flippedCards[character] = false;\n      }, 1500);\n    },\n    setKanaType(type) {\n      this.kanaType = type;\n      // 清空flippedCards对象\n      Object.keys(this.flippedCards).forEach(key => {\n        delete this.flippedCards[key];\n      });\n    },\n    toggleRow(rowId) {\n      if (this.selectedRows.includes(rowId)) {\n        this.selectedRows = this.selectedRows.filter(id => id !== rowId);\n      } else {\n        this.selectedRows.push(rowId);\n      }\n      // 清空flippedCards对象\n      Object.keys(this.flippedCards).forEach(key => {\n        delete this.flippedCards[key];\n      });\n    },\n    selectAllRows() {\n      if (this.selectedRows.length === this.rows.length) {\n        this.selectedRows = [];\n      } else {\n        this.selectedRows = this.rows.map(row => row.id);\n      }\n      // 清空flippedCards对象\n      Object.keys(this.flippedCards).forEach(key => {\n        delete this.flippedCards[key];\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.kana-rows-container {\n  margin: 20px auto;\n  max-width: 1000px;\n}\n\n.kana-row {\n  margin-bottom: 30px;\n  background-color: #f9f9f9;\n  border-radius: 10px;\n  padding: 15px;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n}\n\n.row-title {\n  margin-bottom: 15px;\n  color: #333;\n  font-size: 1.2rem;\n  border-bottom: 2px solid #4CAF50;\n  padding-bottom: 5px;\n  display: inline-block;\n}\n\n.kana-cards {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n}\n\n.kana-card {\n  width: 100px;\n  height: 120px;\n  perspective: 1000px;\n  cursor: pointer;\n  user-select: none;\n}\n\n.card-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n}\n\n.kana-card.flipped .card-inner {\n  transform: rotateY(180deg);\n}\n\n.card-front, .card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  font-weight: bold;\n}\n\n.card-front {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.card-back {\n  background-color: #2196F3;\n  color: white;\n  transform: rotateY(180deg);\n}\n\n.kana-character {\n  font-size: 48px;\n}\n\n.romaji {\n  font-size: 24px;\n}\n\n.kana-controls {\n  margin: 20px auto;\n  max-width: 900px;\n}\n\n.kana-filter, .row-filter {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 8px;\n  margin-bottom: 15px;\n}\n\nbutton {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  background-color: #f1f1f1;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #ddd;\n}\n\nbutton.active {\n  background-color: #4CAF50;\n  color: white;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}