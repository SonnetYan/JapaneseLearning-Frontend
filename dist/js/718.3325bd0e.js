"use strict";(self["webpackChunkfrontend"]=self["webpackChunkfrontend"]||[]).push([[718],{7718:function(a,e,s){s.r(e),s.d(e,{default:function(){return _}});var r=s(6768),t=s(4232);const o={class:"vocabulary-detail-view"},l={key:0,class:"loading"},n={key:1,class:"error"},d={key:2,class:"vocabulary-detail"},i={class:"header-actions"},c={class:"actions"},u={class:"word-header"},k={key:0,class:"kanji"},v={class:"kana"},h={class:"meaning"},w={key:0,class:"tags"},y={class:"examples"},g={class:"japanese"},p={class:"english"};function b(a,e,s,b,f,E){const C=(0,r.g2)("router-link");return(0,r.uX)(),(0,r.CE)("div",o,[f.loading?((0,r.uX)(),(0,r.CE)("div",l,"Loading...")):f.error?((0,r.uX)(),(0,r.CE)("div",n,(0,t.v_)(f.error),1)):((0,r.uX)(),(0,r.CE)("div",d,[(0,r.Lk)("div",i,[(0,r.bF)(C,{to:"/vocabulary",class:"back-btn"},{default:(0,r.k6)((()=>e[1]||(e[1]=[(0,r.eW)(" Back to List ")]))),_:1}),(0,r.Lk)("div",c,[(0,r.bF)(C,{to:`/vocabulary/edit/${f.word._id}`,class:"edit-btn"},{default:(0,r.k6)((()=>e[2]||(e[2]=[(0,r.eW)(" Edit ")]))),_:1},8,["to"]),(0,r.Lk)("button",{onClick:e[0]||(e[0]=(...a)=>E.deleteWord&&E.deleteWord(...a)),class:"delete-btn"},"Delete")])]),(0,r.Lk)("div",u,[(0,r.Lk)("h1",null,[f.word.kanji?((0,r.uX)(),(0,r.CE)("span",k,(0,t.v_)(f.word.kanji),1)):(0,r.Q3)("",!0),(0,r.Lk)("span",v,(0,t.v_)(f.word.kana),1)]),(0,r.Lk)("p",h,(0,t.v_)(f.word.meaning),1)]),f.word.tags&&f.word.tags.length?((0,r.uX)(),(0,r.CE)("div",w,[((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(f.word.tags,((a,e)=>((0,r.uX)(),(0,r.CE)("span",{key:e,class:"tag"},(0,t.v_)(a),1)))),128))])):(0,r.Q3)("",!0),(0,r.Lk)("div",y,[e[3]||(e[3]=(0,r.Lk)("h2",null,"Example Sentences",-1)),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(f.word.examples,((a,e)=>((0,r.uX)(),(0,r.CE)("div",{key:e,class:"example"},[(0,r.Lk)("p",g,(0,t.v_)(a.japanese),1),(0,r.Lk)("p",p,(0,t.v_)(a.english),1)])))),128))])]))])}s(4114);var f=s(6519),E={name:"VocabularyDetailView",data(){return{word:{},loading:!0,error:null}},created(){this.fetchWord()},methods:{async fetchWord(){this.loading=!0;try{const a=await f.Q1.getById(this.$route.params.id);this.word=a.data}catch(a){this.error="Error fetching vocabulary: "+a.message,console.error(a)}finally{this.loading=!1}},async deleteWord(){if(confirm("Are you sure you want to delete this word?"))try{await f.Q1.delete(this.word._id),this.$router.push("/vocabulary")}catch(a){console.error("Error deleting word:",a)}}}},C=s(1241);const L=(0,C.A)(E,[["render",b],["__scopeId","data-v-55072946"]]);var _=L}}]);
//# sourceMappingURL=718.3325bd0e.js.map