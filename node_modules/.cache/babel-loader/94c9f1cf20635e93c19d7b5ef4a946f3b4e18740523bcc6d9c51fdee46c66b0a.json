{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flashcard-view\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"flashcard-setup\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  key: 3,\n  class: \"flashcard-session\"\n};\nconst _hoisted_9 = {\n  class: \"progress-bar\"\n};\nconst _hoisted_10 = {\n  class: \"progress-text\"\n};\nconst _hoisted_11 = {\n  class: \"flashcard-front\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"japanese\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"kanji\"\n};\nconst _hoisted_14 = {\n  class: \"kana\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"meaning\"\n};\nconst _hoisted_16 = {\n  class: \"flashcard-back\"\n};\nconst _hoisted_17 = {\n  key: 0,\n  class: \"meaning\"\n};\nconst _hoisted_18 = {\n  key: 1,\n  class: \"japanese\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"kanji\"\n};\nconst _hoisted_20 = {\n  class: \"kana\"\n};\nconst _hoisted_21 = {\n  key: 2,\n  class: \"examples\"\n};\nconst _hoisted_22 = {\n  class: \"example\"\n};\nconst _hoisted_23 = {\n  class: \"japanese-example\"\n};\nconst _hoisted_24 = {\n  class: \"english-example\"\n};\nconst _hoisted_25 = {\n  key: 0,\n  class: \"flashcard-actions\"\n};\nconst _hoisted_26 = {\n  key: 4,\n  class: \"flashcard-complete\"\n};\nconst _hoisted_27 = {\n  class: \"stats\"\n};\nconst _hoisted_28 = {\n  class: \"stat-item\"\n};\nconst _hoisted_29 = {\n  class: \"stat-value\"\n};\nconst _hoisted_30 = {\n  class: \"stat-item\"\n};\nconst _hoisted_31 = {\n  class: \"stat-value\"\n};\nconst _hoisted_32 = {\n  class: \"stat-item\"\n};\nconst _hoisted_33 = {\n  class: \"stat-value\"\n};\nconst _hoisted_34 = {\n  class: \"stat-item\"\n};\nconst _hoisted_35 = {\n  class: \"stat-value\"\n};\nconst _hoisted_36 = {\n  class: \"flashcard-complete-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[22] || (_cache[22] = _createElementVNode(\"h1\", null, \"Flashcard Review\", -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : !$data.flashcardStarted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[15] || (_cache[15] = _createElementVNode(\"h2\", null, \"Flashcard Options\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"flashcard-type\"\n  }, \"Flashcard Type\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"flashcard-type\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.flashcardType = $event)\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"option\", {\n    value: \"japanese-to-meaning\"\n  }, \"Japanese to Meaning\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"meaning-to-japanese\"\n  }, \"Meaning to Japanese\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"mixed\"\n  }, \"Mixed (Both Directions)\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.flashcardType]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"flashcard-source\"\n  }, \"Flashcard Source\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"flashcard-source\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.flashcardSource = $event)\n  }, _cache[11] || (_cache[11] = [_createElementVNode(\"option\", {\n    value: \"all\"\n  }, \"All Vocabulary\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"due\"\n  }, \"Due for Review\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.flashcardSource]])]), $data.flashcardSource === 'all' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    for: \"flashcard-count\"\n  }, \"Number of Flashcards\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"flashcard-count\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.flashcardCount = $event)\n  }, _cache[13] || (_cache[13] = [_createElementVNode(\"option\", {\n    value: \"10\"\n  }, \"10\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"20\"\n  }, \"20\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"30\"\n  }, \"30\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"all\"\n  }, \"All\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.flashcardCount]])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.startFlashcards && $options.startFlashcards(...args)),\n    class: \"start-btn\"\n  }, \"Start Flashcards\")])) : $data.flashcardStarted && !$data.flashcardComplete ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", {\n    class: \"progress\",\n    style: _normalizeStyle({\n      width: `${$data.currentCardIndex / $data.flashcards.length * 100}%`\n    })\n  }, null, 4 /* STYLE */), _createElementVNode(\"div\", _hoisted_10, _toDisplayString($data.currentCardIndex) + \" / \" + _toDisplayString($data.flashcards.length), 1 /* TEXT */)]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"flashcard\", {\n      flipped: $data.cardFlipped\n    }]),\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.flipCard && $options.flipCard(...args))\n  }, [_createElementVNode(\"div\", _hoisted_11, [$data.currentDirection === 'japanese-to-meaning' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [$options.currentCard.kanji ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _toDisplayString($options.currentCard.kanji), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_14, _toDisplayString($options.currentCard.kana), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString($options.currentCard.meaning), 1 /* TEXT */))]), _createElementVNode(\"div\", _hoisted_16, [$data.currentDirection === 'japanese-to-meaning' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, _toDisplayString($options.currentCard.meaning), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [$options.currentCard.kanji ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, _toDisplayString($options.currentCard.kanji), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_20, _toDisplayString($options.currentCard.kana), 1 /* TEXT */)])), $options.currentCard.examples && $options.currentCard.examples.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, _toDisplayString($options.currentCard.examples[0].japanese), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_24, _toDisplayString($options.currentCard.examples[0].english), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */), $data.cardFlipped ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.rateCard('hard')),\n    class: \"hard-btn\"\n  }, \"Hard\"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.rateCard('good')),\n    class: \"good-btn\"\n  }, \"Good\"), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = $event => $options.rateCard('easy')),\n    class: \"easy-btn\"\n  }, \"Easy\")])) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_cache[21] || (_cache[21] = _createElementVNode(\"h2\", null, \"Flashcard Session Complete!\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", _hoisted_28, [_cache[16] || (_cache[16] = _createElementVNode(\"span\", {\n    class: \"stat-label\"\n  }, \"Total Cards:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_29, _toDisplayString($data.flashcards.length), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_30, [_cache[17] || (_cache[17] = _createElementVNode(\"span\", {\n    class: \"stat-label\"\n  }, \"Easy:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_31, _toDisplayString($data.stats.easy), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_32, [_cache[18] || (_cache[18] = _createElementVNode(\"span\", {\n    class: \"stat-label\"\n  }, \"Good:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_33, _toDisplayString($data.stats.good), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_34, [_cache[19] || (_cache[19] = _createElementVNode(\"span\", {\n    class: \"stat-label\"\n  }, \"Hard:\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_35, _toDisplayString($data.stats.hard), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.resetFlashcards && $options.resetFlashcards(...args)),\n    class: \"reset-btn\"\n  }, \"Start New Session\"), _createVNode(_component_router_link, {\n    to: \"/vocabulary\",\n    class: \"vocab-btn\"\n  }, {\n    default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"Back to Vocabulary\")])),\n    _: 1 /* STABLE */\n  })])]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","_hoisted_2","error","_hoisted_3","_toDisplayString","flashcardStarted","_hoisted_4","_hoisted_5","for","id","_cache","$event","flashcardType","value","_hoisted_6","flashcardSource","_hoisted_7","flashcardCount","_createCommentVNode","onClick","args","$options","startFlashcards","flashcardComplete","_hoisted_8","_hoisted_9","style","_normalizeStyle","width","currentCardIndex","flashcards","length","_hoisted_10","_normalizeClass","flipped","cardFlipped","flipCard","_hoisted_11","currentDirection","_hoisted_12","currentCard","kanji","_hoisted_13","_hoisted_14","kana","_hoisted_15","meaning","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","examples","_hoisted_21","_hoisted_22","_hoisted_23","japanese","_hoisted_24","english","_hoisted_25","rateCard","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","stats","easy","_hoisted_32","_hoisted_33","good","_hoisted_34","_hoisted_35","hard","_hoisted_36","resetFlashcards","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["/Users/sonnet/Documents/4370 Web Programming/ai programming/japanese-learning-app/frontend/src/views/FlashcardView.vue"],"sourcesContent":["<template>\n  <div class=\"flashcard-view\">\n    <h1>Flashcard Review</h1>\n    \n    <div v-if=\"loading\" class=\"loading\">Loading...</div>\n    \n    <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\n    \n    <div v-else-if=\"!flashcardStarted\" class=\"flashcard-setup\">\n      <h2>Flashcard Options</h2>\n      \n      <div class=\"form-group\">\n        <label for=\"flashcard-type\">Flashcard Type</label>\n        <select id=\"flashcard-type\" v-model=\"flashcardType\">\n          <option value=\"japanese-to-meaning\">Japanese to Meaning</option>\n          <option value=\"meaning-to-japanese\">Meaning to Japanese</option>\n          <option value=\"mixed\">Mixed (Both Directions)</option>\n        </select>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"flashcard-source\">Flashcard Source</label>\n        <select id=\"flashcard-source\" v-model=\"flashcardSource\">\n          <option value=\"all\">All Vocabulary</option>\n          <option value=\"due\">Due for Review</option>\n        </select>\n      </div>\n      \n      <div v-if=\"flashcardSource === 'all'\" class=\"form-group\">\n        <label for=\"flashcard-count\">Number of Flashcards</label>\n        <select id=\"flashcard-count\" v-model=\"flashcardCount\">\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n          <option value=\"30\">30</option>\n          <option value=\"all\">All</option>\n        </select>\n      </div>\n      \n      <button @click=\"startFlashcards\" class=\"start-btn\">Start Flashcards</button>\n    </div>\n    \n    <div v-else-if=\"flashcardStarted && !flashcardComplete\" class=\"flashcard-session\">\n      <div class=\"progress-bar\">\n        <div class=\"progress\" :style=\"{ width: `${(currentCardIndex / flashcards.length) * 100}%` }\"></div>\n        <div class=\"progress-text\">{{ currentCardIndex }} / {{ flashcards.length }}</div>\n      </div>\n      \n      <div \n        class=\"flashcard\" \n        :class=\"{ flipped: cardFlipped }\"\n        @click=\"flipCard\"\n      >\n        <div class=\"flashcard-front\">\n          <div v-if=\"currentDirection === 'japanese-to-meaning'\" class=\"japanese\">\n            <div v-if=\"currentCard.kanji\" class=\"kanji\">{{ currentCard.kanji }}</div>\n            <div class=\"kana\">{{ currentCard.kana }}</div>\n          </div>\n          <div v-else class=\"meaning\">\n            {{ currentCard.meaning }}\n          </div>\n        </div>\n        \n        <div class=\"flashcard-back\">\n          <div v-if=\"currentDirection === 'japanese-to-meaning'\" class=\"meaning\">\n            {{ currentCard.meaning }}\n          </div>\n          <div v-else class=\"japanese\">\n            <div v-if=\"currentCard.kanji\" class=\"kanji\">{{ currentCard.kanji }}</div>\n            <div class=\"kana\">{{ currentCard.kana }}</div>\n          </div>\n          \n          <div v-if=\"currentCard.examples && currentCard.examples.length\" class=\"examples\">\n            <div class=\"example\">\n              <div class=\"japanese-example\">{{ currentCard.examples[0].japanese }}</div>\n              <div class=\"english-example\">{{ currentCard.examples[0].english }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"cardFlipped\" class=\"flashcard-actions\">\n        <button @click=\"rateCard('hard')\" class=\"hard-btn\">Hard</button>\n        <button @click=\"rateCard('good')\" class=\"good-btn\">Good</button>\n        <button @click=\"rateCard('easy')\" class=\"easy-btn\">Easy</button>\n      </div>\n    </div>\n    \n    <div v-else class=\"flashcard-complete\">\n      <h2>Flashcard Session Complete!</h2>\n      \n      <div class=\"stats\">\n        <div class=\"stat-item\">\n          <span class=\"stat-label\">Total Cards:</span>\n          <span class=\"stat-value\">{{ flashcards.length }}</span>\n        </div>\n        <div class=\"stat-item\">\n          <span class=\"stat-label\">Easy:</span>\n          <span class=\"stat-value\">{{ stats.easy }}</span>\n        </div>\n        <div class=\"stat-item\">\n          <span class=\"stat-label\">Good:</span>\n          <span class=\"stat-value\">{{ stats.good }}</span>\n        </div>\n        <div class=\"stat-item\">\n          <span class=\"stat-label\">Hard:</span>\n          <span class=\"stat-value\">{{ stats.hard }}</span>\n        </div>\n      </div>\n      \n      <div class=\"flashcard-complete-actions\">\n        <button @click=\"resetFlashcards\" class=\"reset-btn\">Start New Session</button>\n        <router-link to=\"/vocabulary\" class=\"vocab-btn\">Back to Vocabulary</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { vocabularyService, progressService } from '../services/api';\n\nexport default {\n  name: 'FlashcardView',\n  data() {\n    return {\n      loading: false,\n      error: null,\n      vocabulary: [],\n      dueForReview: [],\n      flashcardStarted: false,\n      flashcardComplete: false,\n      flashcardType: 'japanese-to-meaning',\n      flashcardSource: 'all',\n      flashcardCount: '10',\n      flashcards: [],\n      currentCardIndex: 0,\n      cardFlipped: false,\n      currentDirection: 'japanese-to-meaning',\n      stats: {\n        easy: 0,\n        good: 0,\n        hard: 0\n      },\n      userId: '1' // Hardcoded for now, should come from authentication\n    };\n  },\n  computed: {\n    currentCard() {\n      return this.flashcards[this.currentCardIndex] || {};\n    }\n  },\n  created() {\n    this.fetchVocabulary();\n    this.fetchDueWords();\n  },\n  methods: {\n    async fetchVocabulary() {\n      this.loading = true;\n      try {\n        const response = await vocabularyService.getAll();\n        this.vocabulary = response.data;\n      } catch (error) {\n        this.error = 'Error loading vocabulary: ' + error.message;\n        console.error(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchDueWords() {\n      try {\n        const response = await progressService.getReviewWords(this.userId);\n        this.dueForReview = response.data.map(item => item.vocabularyId);\n      } catch (error) {\n        console.error('Error fetching due words:', error);\n        // Fallback to all vocabulary if there's an error\n        this.dueForReview = [];\n      }\n    },\n    startFlashcards() {\n      let wordPool = [];\n      \n      // Determine which words to use\n      if (this.flashcardSource === 'due' && this.dueForReview.length > 0) {\n        wordPool = this.dueForReview;\n      } else {\n        wordPool = this.vocabulary;\n      }\n      \n      if (wordPool.length === 0) {\n        this.error = 'No vocabulary words available for flashcards';\n        return;\n      }\n      \n      // Shuffle the words\n      const shuffled = [...wordPool].sort(() => 0.5 - Math.random());\n      \n      // Select the number of words\n      const cardCount = this.flashcardCount === 'all' \n        ? wordPool.length \n        : Math.min(parseInt(this.flashcardCount), wordPool.length);\n      \n      this.flashcards = shuffled.slice(0, cardCount);\n      \n      // Prepare cards with directions\n      if (this.flashcardType === 'mixed') {\n        // For mixed, we'll set the direction for each card\n        this.flashcards = this.flashcards.map(card => ({\n          ...card,\n          direction: Math.random() > 0.5 ? 'japanese-to-meaning' : 'meaning-to-japanese'\n        }));\n        // Set initial direction\n        this.currentDirection = this.flashcards[0].direction;\n      } else {\n        // Otherwise, all cards use the same direction\n        this.currentDirection = this.flashcardType;\n      }\n      \n      // Reset session stats\n      this.currentCardIndex = 0;\n      this.cardFlipped = false;\n      this.flashcardStarted = true;\n      this.flashcardComplete = false;\n      this.stats = {\n        easy: 0,\n        good: 0,\n        hard: 0\n      };\n    },\n    flipCard() {\n      if (!this.cardFlipped) {\n        this.cardFlipped = true;\n      }\n    },\n    async rateCard(difficulty) {\n      // Update stats\n      this.stats[difficulty]++;\n      \n      // Calculate new status based on difficulty\n      let newStatus;\n      let isCorrect = true;\n      \n      switch (difficulty) {\n        case 'easy':\n          newStatus = 'mastered';\n          break;\n        case 'good':\n          newStatus = 'reviewing';\n          break;\n        case 'hard':\n          newStatus = 'learning';\n          isCorrect = false;\n          break;\n        default:\n          newStatus = 'learning';\n      }\n      \n      // Update progress in the backend\n      try {\n        await progressService.updateProgress({\n          userId: this.userId,\n          vocabularyId: this.currentCard._id,\n          status: newStatus,\n          isCorrect\n        });\n      } catch (error) {\n        console.error('Error updating progress:', error);\n      }\n      \n      // Move to next card\n      this.cardFlipped = false;\n      \n      if (this.currentCardIndex >= this.flashcards.length - 1) {\n        // We've reached the end\n        this.flashcardComplete = true;\n      } else {\n        this.currentCardIndex++;\n        \n        // Update direction for next card if mixed\n        if (this.flashcardType === 'mixed') {\n          this.currentDirection = this.flashcards[this.currentCardIndex].direction;\n        }\n      }\n    },\n    resetFlashcards() {\n      this.flashcardStarted = false;\n      this.flashcardComplete = false;\n      this.currentCardIndex = 0;\n      this.cardFlipped = false;\n      \n      // Refresh the due words\n      this.fetchDueWords();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.flashcard-view {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nh1 {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.loading, .error {\n  text-align: center;\n  padding: 40px;\n}\n\n.error {\n  color: #f44336;\n}\n\n.flashcard-setup {\n  background-color: #f5f5f5;\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n\nselect {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n}\n\n.start-btn, .reset-btn, .vocab-btn {\n  display: block;\n  width: 100%;\n  padding: 12px;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  text-align: center;\n  margin-top: 20px;\n}\n\n.start-btn {\n  background-color: var(--hinata-orange, #F5A623);\n  color: white;\n}\n\n.start-btn:hover {\n  opacity: 0.9;\n}\n\n.progress-bar {\n  height: 10px;\n  background-color: #eee;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  position: relative;\n}\n\n.progress {\n  height: 100%;\n  background-color: var(--hinata-orange, #F5A623);\n  border-radius: 5px;\n  transition: width 0.3s ease;\n}\n\n.progress-text {\n  position: absolute;\n  right: 0;\n  top: -20px;\n  font-size: 14px;\n  color: #666;\n}\n\n.flashcard {\n  position: relative;\n  width: 100%;\n  height: 300px;\n  perspective: 1000px;\n  margin-bottom: 20px;\n  cursor: pointer;\n}\n\n.flashcard-front, .flashcard-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n}\n\n.flashcard-front {\n  background-color: var(--kageyama-blue, #1A3263);\n  color: white;\n  z-index: 2;\n}\n\n.flashcard-back {\n  background-color: white;\n  border: 2px solid var(--kageyama-blue, #1A3263);\n  color: #333;\n  transform: rotateY(180deg);\n}\n\n.flashcard.flipped .flashcard-front {\n  transform: rotateY(180deg);\n}\n\n.flashcard.flipped .flashcard-back {\n  transform: rotateY(0deg);\n}\n\n.kanji {\n  font-size: 3rem;\n  margin-bottom: 10px;\n}\n\n.kana {\n  font-size: 1.8rem;\n}\n\n.meaning {\n  font-size: 2rem;\n  text-align: center;\n}\n\n.examples {\n  margin-top: 20px;\n  width: 100%;\n}\n\n.example {\n  border-top: 1px solid #eee;\n  padding-top: 15px;\n  text-align: center;\n}\n\n.japanese-example {\n  font-size: 1.2rem;\n  margin-bottom: 5px;\n}\n\n.english-example {\n  color: #666;\n}\n\n.flashcard-actions {\n  display: flex;\n  justify-content: space-between;\n}\n\n.hard-btn, .good-btn, .easy-btn {\n  flex: 1;\n  padding: 12px;\n  border: none;\n  font-weight: bold;\n  cursor: pointer;\n  margin: 0 5px;\n  border-radius: 4px;\n}\n\n.hard-btn {\n  background-color: #f44336;\n  color: white;\n}\n\n.good-btn {\n  background-color: #2196F3;\n  color: white;\n}\n\n.easy-btn {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.hard-btn:hover, .good-btn:hover, .easy-btn:hover {\n  opacity: 0.9;\n}\n\n.flashcard-complete {\n  text-align: center;\n}\n\n.stats {\n  display: flex;\n  justify-content: space-around;\n  margin: 30px 0;\n}\n\n.stat-item {\n  background-color: #f5f5f5;\n  padding: 15px;\n  border-radius: 8px;\n  flex: 1;\n  margin: 0 5px;\n}\n\n.stat-label {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.stat-value {\n  font-size: 1.5rem;\n  color: var(--hinata-orange, #F5A623);\n}\n\n.flashcard-complete-actions {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 30px;\n}\n\n.reset-btn, .vocab-btn {\n  flex: 1;\n  margin: 0 10px;\n}\n\n.reset-btn {\n  background-color: var(--hinata-orange, #F5A623);\n  color: white;\n}\n\n.vocab-btn {\n  background-color: var(--kageyama-blue, #1A3263);\n  color: white;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}