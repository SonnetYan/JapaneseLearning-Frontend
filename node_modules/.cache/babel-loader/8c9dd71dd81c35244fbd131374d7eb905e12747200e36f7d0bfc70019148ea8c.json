{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport KanaCard from '@/components/KanaCard.vue';\nexport default {\n  name: 'KanaView',\n  components: {\n    KanaCard\n  },\n  data() {\n    return {\n      kanaType: 'hiragana',\n      showRomajiFirst: false,\n      selectedRows: [],\n      audioStatus: '',\n      audioSuccess: false,\n      audio: null,\n      rows: [{\n        id: 'a',\n        name: 'あ行',\n        romajiName: 'A'\n      }, {\n        id: 'k',\n        name: 'か行',\n        romajiName: 'K'\n      }, {\n        id: 's',\n        name: 'さ行',\n        romajiName: 'S'\n      }, {\n        id: 't',\n        name: 'た行',\n        romajiName: 'T'\n      }, {\n        id: 'n',\n        name: 'な行',\n        romajiName: 'N'\n      }, {\n        id: 'h',\n        name: 'は行',\n        romajiName: 'H'\n      }, {\n        id: 'm',\n        name: 'ま行',\n        romajiName: 'M'\n      }, {\n        id: 'y',\n        name: 'や行',\n        romajiName: 'Y'\n      }, {\n        id: 'r',\n        name: 'ら行',\n        romajiName: 'R'\n      }, {\n        id: 'w',\n        name: 'わ行',\n        romajiName: 'W'\n      }, {\n        id: 'x',\n        name: 'ん',\n        romajiName: 'N special'\n      }]\n    };\n  },\n  mounted() {\n    console.log('KanaView component mounted');\n  },\n  computed: {\n    rowIds() {\n      return this.rows.map(row => row.id);\n    }\n  },\n  methods: {\n    handleKanaClick(character) {\n      // 查找对应的罗马音\n      const kana = this.findKanaByCharacter(character);\n      if (kana) {\n        this.playKanaAudio(kana.romaji);\n      }\n    },\n    findKanaByCharacter(character) {\n      const kanaData = require('@/data/kana.json');\n      const kanaSet = this.kanaType === 'hiragana' ? kanaData.hiragana : kanaData.katakana;\n      return kanaSet.find(k => k.character === character);\n    },\n    playKanaAudio(romaji) {\n      if (!romaji) return;\n      console.log('Attempting to play audio for:', romaji);\n\n      // Cleanup previous audio if it exists\n      if (this.audio) {\n        this.audio.pause();\n        this.audio = null;\n      }\n\n      // 处理特殊情况，如 \"chi\" 应该对应 \"chi.mp3\"\n      const audioPath = `/audio/kana/${romaji}.mp3`;\n      console.log('Audio path:', audioPath);\n\n      // Create new audio element\n      this.audio = new Audio(audioPath);\n\n      // 添加事件监听器来检测加载和错误\n      this.audio.addEventListener('canplaythrough', () => {\n        console.log('Audio loaded and can play');\n        this.audioStatus = `音频已加载: ${romaji}`;\n        this.audioSuccess = true;\n      });\n      this.audio.addEventListener('error', e => {\n        console.error('Audio error:', e);\n        this.audioStatus = `音频加载失败: ${romaji}`;\n        this.audioSuccess = false;\n      });\n\n      // 播放音频\n      this.audio.play().then(() => console.log('Audio playback started successfully')).catch(error => {\n        console.error('Error playing audio:', error);\n        this.audioStatus = `播放失败: ${error.message}`;\n        this.audioSuccess = false;\n      });\n    },\n    testAudio() {\n      this.audioStatus = \"正在测试音频...\";\n\n      // 尝试播放一个简单的音频\n      const testAudio = new Audio('/audio/kana/a.mp3');\n      testAudio.oncanplaythrough = () => {\n        this.audioStatus = \"音频加载成功!\";\n        this.audioSuccess = true;\n        testAudio.play().then(() => {\n          this.audioStatus = \"音频播放成功!\";\n        }).catch(e => {\n          this.audioStatus = `播放错误: ${e.message}`;\n          this.audioSuccess = false;\n        });\n      };\n      testAudio.onerror = () => {\n        this.audioStatus = `音频加载错误`;\n        this.audioSuccess = false;\n      };\n    },\n    setKanaType(type) {\n      this.kanaType = type;\n    },\n    toggleDirection() {\n      this.showRomajiFirst = !this.showRomajiFirst;\n    },\n    selectSingleRow(rowId) {\n      if (this.selectedRows.includes(rowId)) {\n        // 如果选中的是最后一个行，则恢复为全选\n        if (this.selectedRows.length === 1) {\n          this.selectedRows = [];\n        } else {\n          // 否则仅移除当前行\n          this.selectedRows = this.selectedRows.filter(id => id !== rowId);\n        }\n      } else {\n        // 添加到选中行\n        this.selectedRows.push(rowId);\n      }\n    },\n    selectAllRows() {\n      this.selectedRows = [];\n    }\n  }\n};","map":{"version":3,"names":["KanaCard","name","components","data","kanaType","showRomajiFirst","selectedRows","audioStatus","audioSuccess","audio","rows","id","romajiName","mounted","console","log","computed","rowIds","map","row","methods","handleKanaClick","character","kana","findKanaByCharacter","playKanaAudio","romaji","kanaData","require","kanaSet","hiragana","katakana","find","k","pause","audioPath","Audio","addEventListener","e","error","play","then","catch","message","testAudio","oncanplaythrough","onerror","setKanaType","type","toggleDirection","selectSingleRow","rowId","includes","length","filter","push","selectAllRows"],"sources":["/Users/sonnet/Documents/4370 Web Programming/ai programming/japanese-learning-app/frontend/src/views/KanaView.vue"],"sourcesContent":["<template>\n  <div class=\"kana-view-container\">\n    <div class=\"kana-controls\">\n      <div class=\"kana-filter\">\n        <button \n          @click=\"setKanaType('hiragana')\" \n          :class=\"{ active: kanaType === 'hiragana' }\"\n        >\n          平假名\n        </button>\n        <button \n          @click=\"setKanaType('katakana')\" \n          :class=\"{ active: kanaType === 'katakana' }\"\n        >\n          片假名\n        </button>\n        <button\n          @click=\"toggleDirection()\"\n          :class=\"{ active: showRomajiFirst }\"\n          class=\"direction-toggle\"\n        >\n          <span class=\"switch-icon\">⇄</span> {{ showRomajiFirst ? '罗马音 → 假名' : '假名 → 罗马音' }}\n        </button>\n        <button @click=\"testAudio()\" class=\"test-audio-btn\">\n          🔊 测试音频\n        </button>\n      </div>\n    </div>\n\n    <div v-if=\"audioStatus\" class=\"audio-status\" :class=\"{ 'audio-success': audioSuccess, 'audio-error': !audioSuccess }\">\n      {{ audioStatus }}\n    </div>\n\n    <div class=\"row-selector\">\n      <div class=\"row-filter\">\n        <button @click=\"selectAllRows\" :class=\"{ active: selectedRows.length === 0 }\">\n          ALL\n        </button>\n        <button \n          v-for=\"row in rows\" \n          :key=\"row.id\" \n          @click=\"selectSingleRow(row.id)\"\n          :class=\"{ active: selectedRows.includes(row.id) }\"\n        >\n          {{ showRomajiFirst ? row.romajiName : row.name }}\n        </button>\n      </div>\n    </div>\n\n    <!-- 使用 KanaCard 组件 -->\n    <KanaCard \n      :kana-type=\"kanaType\"\n      :show-romaji-first=\"showRomajiFirst\"\n      :selected-rows=\"selectedRows\"\n      :rows=\"rows\"\n      @kana-click=\"handleKanaClick\"\n    />\n  </div>\n</template>\n\n<script>\nimport KanaCard from '@/components/KanaCard.vue';\n\nexport default {\n  name: 'KanaView',\n  components: {\n    KanaCard\n  },\n  data() {\n    return {\n      kanaType: 'hiragana',\n      showRomajiFirst: false,\n      selectedRows: [],\n      audioStatus: '',\n      audioSuccess: false,\n      audio: null,\n      rows: [\n        { id: 'a', name: 'あ行', romajiName: 'A' },\n        { id: 'k', name: 'か行', romajiName: 'K' },\n        { id: 's', name: 'さ行', romajiName: 'S' },\n        { id: 't', name: 'た行', romajiName: 'T' },\n        { id: 'n', name: 'な行', romajiName: 'N' },\n        { id: 'h', name: 'は行', romajiName: 'H' },\n        { id: 'm', name: 'ま行', romajiName: 'M' },\n        { id: 'y', name: 'や行', romajiName: 'Y' },\n        { id: 'r', name: 'ら行', romajiName: 'R' },\n        { id: 'w', name: 'わ行', romajiName: 'W' },\n        { id: 'x', name: 'ん', romajiName: 'N special' }\n      ]\n    };\n  },\n  mounted() {\n    console.log('KanaView component mounted');\n  },\n  computed: {\n    rowIds() {\n      return this.rows.map(row => row.id);\n    }\n  },\n  methods: {\n    handleKanaClick(character) {\n      // 查找对应的罗马音\n      const kana = this.findKanaByCharacter(character);\n      if (kana) {\n        this.playKanaAudio(kana.romaji);\n      }\n    },\n    \n    findKanaByCharacter(character) {\n      const kanaData = require('@/data/kana.json');\n      const kanaSet = this.kanaType === 'hiragana' ? kanaData.hiragana : kanaData.katakana;\n      return kanaSet.find(k => k.character === character);\n    },\n    \n    playKanaAudio(romaji) {\n      if (!romaji) return;\n      \n      console.log('Attempting to play audio for:', romaji);\n      \n      // Cleanup previous audio if it exists\n      if (this.audio) {\n        this.audio.pause();\n        this.audio = null;\n      }\n      \n      // 处理特殊情况，如 \"chi\" 应该对应 \"chi.mp3\"\n      const audioPath = `/audio/kana/${romaji}.mp3`;\n      console.log('Audio path:', audioPath);\n      \n      // Create new audio element\n      this.audio = new Audio(audioPath);\n      \n      // 添加事件监听器来检测加载和错误\n      this.audio.addEventListener('canplaythrough', () => {\n        console.log('Audio loaded and can play');\n        this.audioStatus = `音频已加载: ${romaji}`;\n        this.audioSuccess = true;\n      });\n      \n      this.audio.addEventListener('error', (e) => {\n        console.error('Audio error:', e);\n        this.audioStatus = `音频加载失败: ${romaji}`;\n        this.audioSuccess = false;\n      });\n      \n      // 播放音频\n      this.audio.play()\n        .then(() => console.log('Audio playback started successfully'))\n        .catch(error => {\n          console.error('Error playing audio:', error);\n          this.audioStatus = `播放失败: ${error.message}`;\n          this.audioSuccess = false;\n        });\n    },\n    \n    testAudio() {\n      this.audioStatus = \"正在测试音频...\";\n      \n      // 尝试播放一个简单的音频\n      const testAudio = new Audio('/audio/kana/a.mp3');\n      \n      testAudio.oncanplaythrough = () => {\n        this.audioStatus = \"音频加载成功!\";\n        this.audioSuccess = true;\n        \n        testAudio.play()\n          .then(() => {\n            this.audioStatus = \"音频播放成功!\";\n          })\n          .catch(e => {\n            this.audioStatus = `播放错误: ${e.message}`;\n            this.audioSuccess = false;\n          });\n      };\n      \n      testAudio.onerror = () => {\n        this.audioStatus = `音频加载错误`;\n        this.audioSuccess = false;\n      };\n    },\n    \n    setKanaType(type) {\n      this.kanaType = type;\n    },\n    \n    toggleDirection() {\n      this.showRomajiFirst = !this.showRomajiFirst;\n    },\n    \n    selectSingleRow(rowId) {\n      if (this.selectedRows.includes(rowId)) {\n        // 如果选中的是最后一个行，则恢复为全选\n        if (this.selectedRows.length === 1) {\n          this.selectedRows = [];\n        } else {\n          // 否则仅移除当前行\n          this.selectedRows = this.selectedRows.filter(id => id !== rowId);\n        }\n      } else {\n        // 添加到选中行\n        this.selectedRows.push(rowId);\n      }\n    },\n    \n    selectAllRows() {\n      this.selectedRows = [];\n    }\n  }\n};\n</script>\n\n<style scoped>\n.kana-view-container {\n  margin: 0 auto;\n  max-width: 900px;\n  padding: 1rem;\n}\n\n.kana-controls, .row-selector {\n  margin: 20px auto;\n  max-width: 800px;\n}\n\n.kana-filter, .row-filter {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 8px;\n  margin-bottom: 15px;\n}\n\nbutton {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  background-color: #f1f1f1;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #ddd;\n}\n\nbutton.active {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.direction-toggle {\n  margin-left: 20px;\n  background-color: #ff9800;\n  color: white;\n}\n\n.direction-toggle:hover {\n  background-color: #f57c00;\n}\n\n.direction-toggle.active {\n  background-color: #2196F3;\n}\n\n.switch-icon {\n  margin-right: 5px;\n  font-weight: bold;\n  font-size: 16px;\n}\n\n.audio-status {\n  margin: 10px auto;\n  padding: 10px;\n  text-align: center;\n  border-radius: 4px;\n  max-width: 800px;\n}\n\n.audio-success {\n  background-color: #dff0d8;\n  color: #3c763d;\n}\n\n.audio-error {\n  background-color: #f2dede;\n  color: #a94442;\n}\n\n.test-audio-btn {\n  background-color: #4a4a4a;\n  color: white;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}