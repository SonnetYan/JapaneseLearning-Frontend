{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"vocabulary-list\"\n};\nconst _hoisted_2 = {\n  class: \"search-bar\"\n};\nconst _hoisted_3 = {\n  class: \"vocabulary-table\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Vocabulary List\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchTerm = $event),\n    placeholder: \"Search vocabulary...\",\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.filterVocabulary && $options.filterVocabulary(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.searchTerm]])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Kanji\"), _createElementVNode(\"th\", null, \"Kana\"), _createElementVNode(\"th\", null, \"Meaning\"), _createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredVocabulary, word => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: word._id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(word.kanji || '–'), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(word.kana), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(word.meaning), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.viewDetails(word._id)\n    }, \"View\", 8 /* PROPS */, _hoisted_4), _createElementVNode(\"button\", {\n      onClick: $event => $options.editWord(word._id)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteWord(word._id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */)), $data.filteredVocabulary.length === 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_7, _cache[2] || (_cache[2] = [_createElementVNode(\"td\", {\n    colspan: \"4\"\n  }, \"No vocabulary words found.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)])])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","type","_cache","$event","$data","searchTerm","placeholder","onInput","args","$options","filterVocabulary","_hoisted_3","_Fragment","_renderList","filteredVocabulary","word","_id","_toDisplayString","kanji","kana","meaning","onClick","viewDetails","_hoisted_4","editWord","_hoisted_5","deleteWord","_hoisted_6","length","_hoisted_7","colspan","_createCommentVNode"],"sources":["/Users/sonnet/Documents/4370 Web Programming/ai programming/japanese-learning-app/frontend/src/components/VocabularyList.vue"],"sourcesContent":["<template>\n  <div class=\"vocabulary-list\">\n    <h2>Vocabulary List</h2>\n    \n    <div class=\"search-bar\">\n      <input \n        type=\"text\" \n        v-model=\"searchTerm\" \n        placeholder=\"Search vocabulary...\" \n        @input=\"filterVocabulary\"\n      />\n    </div>\n    \n    <div class=\"vocabulary-table\">\n      <table>\n        <thead>\n          <tr>\n            <th>Kanji</th>\n            <th>Kana</th>\n            <th>Meaning</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"word in filteredVocabulary\" :key=\"word._id\">\n            <td>{{ word.kanji || '–' }}</td>\n            <td>{{ word.kana }}</td>\n            <td>{{ word.meaning }}</td>\n            <td>\n              <button @click=\"viewDetails(word._id)\">View</button>\n              <button @click=\"editWord(word._id)\">Edit</button>\n              <button @click=\"deleteWord(word._id)\">Delete</button>\n            </td>\n          </tr>\n          <tr v-if=\"filteredVocabulary.length === 0\">\n            <td colspan=\"4\">No vocabulary words found.</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { vocabularyService } from '../services/api';\n\nexport default {\n  name: 'VocabularyList',\n  data() {\n    return {\n      vocabulary: [],\n      filteredVocabulary: [],\n      searchTerm: '',\n      loading: true,\n      error: null\n    };\n  },\n  created() {\n    this.fetchVocabulary();\n  },\n  methods: {\n    async fetchVocabulary() {\n      this.loading = true;\n      try {\n        const response = await vocabularyService.getAll();\n        this.vocabulary = response.data;\n        this.filteredVocabulary = [...this.vocabulary];\n      } catch (error) {\n        this.error = 'Error fetching vocabulary: ' + error.message;\n        console.error(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    filterVocabulary() {\n      if (!this.searchTerm) {\n        this.filteredVocabulary = [...this.vocabulary];\n        return;\n      }\n      \n      const term = this.searchTerm.toLowerCase();\n      this.filteredVocabulary = this.vocabulary.filter(word => \n        (word.kanji && word.kanji.toLowerCase().includes(term)) ||\n        word.kana.toLowerCase().includes(term) ||\n        word.meaning.toLowerCase().includes(term)\n      );\n    },\n    viewDetails(id) {\n      this.$router.push(`/vocabulary/${id}`);\n    },\n    editWord(id) {\n      this.$router.push(`/vocabulary/edit/${id}`);\n    },\n    async deleteWord(id) {\n      if (confirm('Are you sure you want to delete this word?')) {\n        try {\n          await vocabularyService.delete(id);\n          this.vocabulary = this.vocabulary.filter(word => word._id !== id);\n          this.filterVocabulary();\n        } catch (error) {\n          console.error('Error deleting word:', error);\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.vocabulary-list {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.search-bar {\n  margin-bottom: 20px;\n}\n\n.search-bar input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n}\n\n.vocabulary-table {\n  width: 100%;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nthead th {\n  background-color: var(--kageyama-blue, #1A3263);\n  color: var(--text-light, #FFFFFF);\n  padding: 12px;\n  text-align: left;\n  border-bottom: 2px solid var(--hinata-orange, #F5A623);\n  font-size: 16px;\n  font-weight: bold;\n}\n\ntbody td {\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n}\n\nbutton {\n  margin-right: 5px;\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n  box-shadow: 0 2px 4px var(--shadow, rgba(0, 0, 0, 0.1));\n}\n\nbutton:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px var(--shadow, rgba(0, 0, 0, 0.1));\n}\n\nbutton:nth-child(1) {\n  background-color:rgb(96, 175, 105);\n  color: var(--text-light, #FFFFFF);\n}\n\nbutton:nth-child(1):hover {\n  opacity: 0.9;\n}\n\nbutton:nth-child(2) {\n  background-color:rgb(58, 104, 195); \n  color: var(--text-light, #FFFFFF);\n}\n\nbutton:nth-child(2):hover {\n  opacity: 0.9;\n}\n\nbutton:nth-child(3) {\n  background-color:rgb(249, 79, 67);\n  color: var(--text-light, #FFFFFF);\n}\n\nbutton:nth-child(3):hover {\n  opacity: 0.9;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAGrBA,KAAK,EAAC;AAAY;;EASlBA,KAAK,EAAC;AAAkB;mBAbjC;mBAAA;mBAAA;;EAAAC,GAAA;AAAA;;uBACEC,mBAAA,CAuCM,OAvCNC,UAuCM,G,0BAtCJC,mBAAA,CAAwB,YAApB,iBAAe,sBAEnBA,mBAAA,CAOM,OAPNC,UAOM,G,gBANJD,mBAAA,CAKE;IAJAE,IAAI,EAAC,MAAM;IANnB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOiBC,KAAA,CAAAC,UAAU,GAAAF,MAAA;IACnBG,WAAW,EAAC,sBAAsB;IACjCC,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;iEAFfJ,KAAA,CAAAC,UAAU,E,KAMvBN,mBAAA,CA0BM,OA1BNY,UA0BM,GAzBJZ,mBAAA,CAwBQ,gB,0BAvBNA,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGfA,mBAAA,CAcQ,iB,kBAbNF,mBAAA,CASKe,SAAA,QAjCfC,WAAA,CAwB6BT,KAAA,CAAAU,kBAAkB,EAA1BC,IAAI;yBAAflB,mBAAA,CASK;MATmCD,GAAG,EAAEmB,IAAI,CAACC;QAChDjB,mBAAA,CAAgC,YAAAkB,gBAAA,CAAzBF,IAAI,CAACG,KAAK,yBACjBnB,mBAAA,CAAwB,YAAAkB,gBAAA,CAAjBF,IAAI,CAACI,IAAI,kBAChBpB,mBAAA,CAA2B,YAAAkB,gBAAA,CAApBF,IAAI,CAACK,OAAO,kBACnBrB,mBAAA,CAIK,aAHHA,mBAAA,CAAoD;MAA3CsB,OAAK,EAAAlB,MAAA,IAAEM,QAAA,CAAAa,WAAW,CAACP,IAAI,CAACC,GAAG;OAAG,MAAI,iBA7BzDO,UAAA,GA8BcxB,mBAAA,CAAiD;MAAxCsB,OAAK,EAAAlB,MAAA,IAAEM,QAAA,CAAAe,QAAQ,CAACT,IAAI,CAACC,GAAG;OAAG,MAAI,iBA9BtDS,UAAA,GA+Bc1B,mBAAA,CAAqD;MAA5CsB,OAAK,EAAAlB,MAAA,IAAEM,QAAA,CAAAiB,UAAU,CAACX,IAAI,CAACC,GAAG;OAAG,QAAM,iBA/B1DW,UAAA,E;kCAkCoBvB,KAAA,CAAAU,kBAAkB,CAACc,MAAM,U,cAAnC/B,mBAAA,CAEK,MApCfgC,UAAA,EAAA3B,MAAA,QAAAA,MAAA,OAmCYH,mBAAA,CAA+C;IAA3C+B,OAAO,EAAC;EAAG,GAAC,4BAA0B,oB,MAnCtDC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}